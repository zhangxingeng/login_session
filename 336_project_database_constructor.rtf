{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fswiss\fcharset0 Arial-BoldMT;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red153\green153\blue153;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c60000\c60000\c60000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx8640\pardeftab720\ri720\sl276\slmult1\partightenfactor0

\f0\fs22 \cf0 /*****************DB_info**********************/\
\pard\pardeftab720\ri720\sl276\slmult1\partightenfactor0
\cf0 DB Name: BuyMe (drop it if you want)\
Link(hostname): "cs336.c8i9b7bbuew6.us-east-2.rds.amazonaws.com"\
Port: :3306\
User & Pass: "geng", "88888888"\
\
\
/*********DB_structure_in_BCNF(frame)*********/\
\
E: user(varchar(50) \cf2 email\cf0 , varchar(20) password, varchar(20)name,varchar(50) address, char(2) state, varchar(6) zip, varchar(10) phone_num) \
\
R: buyer(char(8) \cf2 buyer_num\cf0 , (FK) email, int fdbk)\
\
R: seller(char(8) \cf2 seller_num\cf0 , (FK) email, int fdbk)\
\
E: card((FK)email, varchar(16) \cf2 card_num\cf0 ,varchar(20) name, ,varchar(50) address, char(2) state, varchar(6) zip,char(4) expiration_date, char(3) cvv)\
\
E: cus_rep(varchar(50)\cf2  cus_email\cf0 ,varchar(20)  password)\
\
R: cr_responsible_for_user((FK) \cf2 cus_email\cf0 , (FK) \cf2 email\cf0 )\
\
E: admin(varchar(50) \cf2 email\cf0 , varchar(20) password)\
\
E: item(char(10) \cf2 item_num\cf0 , (FK) email,varchar(50) title, varchar(500) description, varchar(10) category, char(1) status, float start_price, varchar(20) pic1, varchar(20) pic2, varchar(20) pic3) \
\
R: bids((FK) \cf2 item_num\cf0 , (FK) \cf2 email\cf0 , float price, date date)\
\
R: purchase((FK) \cf2 item_num\cf0 , (FK)\cf2 buyer_num\cf0 , (FK)\cf2 seller_num\cf0 , int fdbk_buyer, int fdbk_seller)\
\
E: question(char(11) \cf2 question_num\cf0 , (FK)item_num, (FK)email, varchar(100) question)\
\
E: answer((FK) question_num, (FK) email ,varchar(500) answer)\
\
E: alert((FK) \cf2 email\cf0 , (FK) \cf2 item_num\cf0 )\
\
E: watchlist((FK) \cf2 email\cf0 , (FK) \cf2 item_num\cf0 )\
\
\
/****************notes****************/\
Shorthand note: red is Primary Key. FK means Foreign Key, E: entity, R: relation\
\
Card:	assume that one user can have more than one card.\
\
Admin: assume admin can control all representatives.\
\
items: 	once status is sold, curr_owner will change, final price is the highest bidder. \
	No more bids allowed on this item. \
\
Pics: 	use md5 as pic name store in separate folder(only name in sql). Max: 3 pics. \
\
Answer:since answer does not have a unique identifier(answer#) a user can only answer \
	a question once, otherwise a primary key duplication Exception occurred(use code \
	to avoid it).\
\
Fdbks: feedbacks are considered as int[1-5]. Users feedback is decided by their items\
	sold or bought. Word feedback can be max 300chars.\
\
\
/*************SQL_query(table creator)************/\
\
DROP DATABASE IF EXISTS BuyMe;\
CREATE DATABASE IF NOT EXISTS BuyMe;\
USE BuyMe;\
\
CREATE TABLE user(\
    email VARCHAR(50),\
	password VARCHAR(20) NOT NULL,\
	name VARCHAR(20) NOT NULL,\
	address VARCHAR(50) NOT NULL,\
	state CHAR(2) NOT NULL,\
	zip VARCHAR(6) NOT NULL,\
	phone_num VARCHAR(10) NOT NULL,\
	PRIMARY KEY (email)\
);\
\
CREATE TABLE buyer(\
    buyer_num CHAR(8),\
	email VARCHAR(50),\
	fdbk INT NOT NULL,\
	PRIMARY KEY (buyer_num),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE seller(\
    seller_num CHAR(8),\
	email VARCHAR(50),\
	fdbk INT NOT NULL,\
	PRIMARY KEY (seller_num),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE card(\
    email VARCHAR(16),\
    card_num VARCHAR(20),\
    name VARCHAR(50),\
    address VARCHAR(50) NOT NULL,\
	state CHAR(2) NOT NULL,\
	zip VARCHAR(6) NOT NULL,\
	expiration_date CHAR(4) NOT NULL,\
	cvv CHAR(3) NOT NULL,\
	PRIMARY KEY (card_num),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE cus_rep(\
    cus_email VARCHAR(50),\
    password VARCHAR(20),\
	PRIMARY KEY (cus_email)\
);\
\
CREATE TABLE cr_responsible_for_user(\
    cus_email VARCHAR(50),\
    email VARCHAR(50),\
	PRIMARY KEY (email, cus_email),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (cus_email) REFERENCES cus_rep(cus_email)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE admin(\
    email VARCHAR(50),\
    password VARCHAR(20),\
	PRIMARY KEY (email)\
);\
\
CREATE TABLE item(\
    item_num CHAR(10),\
    email VARCHAR(50),\
    title VARCHAR(50),\
    description VARCHAR(500),\
    category VARCHAR(10) NOT NULL,\
    status CHAR(1),\
    start_price FLOAT NOT NULL,\
    pic1 VARCHAR(20),\
    pic2 VARCHAR(20),\
    pic3 VARCHAR(20),\
    PRIMARY KEY(item_num),\
    FOREIGN KEY (email)\
	REFERENCES user(email)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE bids(\
    item_num CHAR(10),\
    email VARCHAR(50) NOT NULL,\
    price FLOAT NOT NULL,\
	date date,\
    FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (item_num) REFERENCES item(item_num)\
   	 ON DELETE CASCADE,\
	PRIMARY KEY(email, item_num)\
);\
\
CREATE TABLE purchase(\
    item_num CHAR(10),\
    buyer_num CHAR(8),\
    seller_num CHAR(8),\
    fdbk_buyer INT NOT NULL,\
    fdbk_seller INT NOT NULL,\
    FOREIGN KEY (item_num) REFERENCES item(item_num)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (buyer_num) REFERENCES buyer(buyer_num)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (seller_num) REFERENCES seller(seller_num)\
   	 ON DELETE CASCADE,\
    PRIMARY KEY (item_num, buyer_num, seller_num)\
);\
\
CREATE TABLE question(\
    question_num CHAR(11),\
    item_num CHAR(10),\
    email VARCHAR(50) NOT NULL,\
    question VARCHAR(100),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (item_num) REFERENCES item(item_num)\
   	 ON DELETE CASCADE,\
	PRIMARY KEY (question_num)\
);\
\
CREATE TABLE answer(\
    question_num CHAR(11),\
    email VARCHAR(50) NOT NULL,\
    answer VARCHAR(500),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (question_num) REFERENCES question(question_num)\
   	 ON DELETE CASCADE\
);\
\
CREATE TABLE alerts(\
    email VARCHAR(50) NOT NULL,\
    item_num CHAR(10),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (item_num) REFERENCES item(item_num)\
   	 ON DELETE CASCADE,\
	PRIMARY KEY(email, item_num)\
);\
\
CREATE TABLE wishlist(\
    email VARCHAR(50) NOT NULL,\
    item_num CHAR(10),\
	FOREIGN KEY (email) REFERENCES user(email)\
   	 ON DELETE CASCADE,\
    FOREIGN KEY (item_num) REFERENCES item(item_num)\
   	 ON DELETE CASCADE,\
	PRIMARY KEY(email, item_num)\
);\
\
\
/***************sql test cases(instances)****************/\
TODO:\
Write 5-10 instances for future tests structured exactly as the frame and the table creator(or change those two first).\
\cf2 Make sure this section is always sync with the first section\cf0 \
(please write TESTED msql code here)\
Example:\
\
\pard\pardeftab720\ri720\sl276\slmult1\partightenfactor0
\cf3 insert into student(sid,sname,gender,gpa,age,major)\
values\
(43523,'Tom','M',3.2,21,'CS'),\
(52345,'Nick','M',3.9,24,'CS'),\
(65355,'James','M',3.1,23,'Math'),\
(23541,'John','M',2.8,27,'CS'),\
(45243,'Cameron','M',4.0,24,'CS'),\
(34523,'Emma','F',2.7,24,'CS'),\
(24523,'Olivia','F',3.2,24,'Math'),\
(45766,'Ava','F',2.4,24,'CS'),\
(45234,'Isabella','F',3.1,24,'CS'),\
(42342,'Sophia','F',3.5,24,'Math'),\
(84952,'Charlotte','F',3.0,24,'CS');\
\
insert into prof(pid,pname,gender,age,dept)\
values\
(523452,'Jeff','M',49,'CS'),\
(234523,'Willam','M',45,'Math'),\
(256355,'Jacob','M',78,'CS'),\
(252423,'Ethan','M',54,'Math'),\
(462566,'Zoey','F',47,'CS'),\
(452352,'Lily','F',56,'Math'),\
(435234,'Luna','F',34,'CS');\
\
show tables;\
describe student;\
show columns from prof;\
\pard\pardeftab720\ri720\sl276\slmult1\partightenfactor0
\cf0 \
\
\pard\pardeftab720\ri720\sl276\slmult1\partightenfactor0

\f1\b \cf0 Make sure the name is exactly the same as the frame written on top, and the table creator written in the previous section.\
Or you can change the frame and the table creator first and use another name.\
\pard\pardeftab720\ri720\sl276\slmult1\partightenfactor0

\f0\b0 \cf0 \
/****************EOF****************/\
\
Created by: Xingeng on: 04-14-2019\
Modified by: Xingeng on: 04-15-2019\
(please note here  after modification)\
\
}